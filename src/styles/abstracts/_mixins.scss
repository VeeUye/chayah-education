// ✅ Centering
@mixin flex-center($direction: row) {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: $direction;
}

// ✅ Media Queries
$breakpoints: (
        sm: 640px,
        md: 768px,
        lg: 1024px,
        xl: 1280px
);

@mixin mq($size) {
  @if map-has-key($breakpoints, $size) {
    @media (min-width: #{map-get($breakpoints, $size)}) {
      @content;
    }
  } @else {
    @error "Breakpoint '#{$size}' not found. Available breakpoints: #{map-keys($breakpoints)}";
  }
}

// ✅ Typography
@mixin typography($size: 'md', $weight: 400, $color: var(--color-text-primary)) {
  font-family: var(--font-family-sans), serif;
  font-size: var(--font-size-#{$size});
  font-weight: $weight;
  color: $color;
}

// ✅ Focus States (Accessibility)
@mixin focus-visible-ring {
  &:focus-visible {
    outline: 2px solid var(--color-primary);
    outline-offset: 2px;
  }
}

// ✅ Truncate Text
@mixin truncate-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// ✅ Responsive Property
// Applies a CSS property with different values based on breakpoints.
// @param $property - The CSS property to set (e.g., 'padding', 'gap').
// @param $values - A list of values: (mobile, tablet, desktop).
@mixin responsive-property($property, $values) {
  #{$property}: nth($values, 1); // Mobile-first value

  @include mq('md') { // Tablet
    #{$property}: nth($values, 2);
  }

  @include mq('lg') { // Desktop
    #{$property}: nth($values, 3);
  }
}